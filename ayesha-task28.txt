module fifo #( 
  parameter DATA_WIDTH = 8,         
  parameter FIFO_DEPTH = 16         
)(
  input logic clk,
  input logic rst,
  input logic wr_en,                
  input logic rd_en,                
  input logic [DATA_WIDTH-1:0] din, 
  output logic [DATA_WIDTH-1:0] dout, 
  output logic full,                
  output logic empty                
);

  logic [DATA_WIDTH-1:0] mem [FIFO_DEPTH-1:0];   
  logic [$clog2(FIFO_DEPTH)-1:0] wr_ptr, rd_ptr; 
  logic [FIFO_DEPTH:0] fifo_count;               

  assign full = (fifo_count == FIFO_DEPTH);      
  assign empty = (fifo_count == 0);              

  always_ff @(posedge clk or posedge rst) begin
    if (rst) begin
      wr_ptr <= 0;              
      rd_ptr <= 0;              
      fifo_count <= 0;          
    end else begin
      if (wr_en && !full) begin
        mem[wr_ptr] <= din;     
        wr_ptr <= wr_ptr + 1;   
        fifo_count <= fifo_count + 1; 
      end
      if (rd_en && !empty) begin
        dout <= mem[rd_ptr];    
        rd_ptr <= rd_ptr + 1;   
        fifo_count <= fifo_count - 1; 
      end
    end
  end

endmodule

module fifo_tb;
  logic clk;
  logic rst;
  logic wr_en;
  logic rd_en;
  logic [7:0] din;              
  logic [7:0] dout;             
  logic full;
  logic empty;

  fifo #(
    .DATA_WIDTH(8),
    .FIFO_DEPTH(16)
  ) fifo_inst (
    .clk(clk),
    .rst(rst),
    .wr_en(wr_en),
    .rd_en(rd_en),
    .din(din),
    .dout(dout),
    .full(full),
    .empty(empty)
  );

  initial begin
    clk = 0;
    rst = 1;
    wr_en = 0;
    rd_en = 0;
    din = 0;

    #10 rst = 0;

    $display("Filling FIFO");
    for (int i = 0; i < 16; i++) begin
      @ (posedge clk);
      din = i;
      wr_en = 1;
      if (full) begin
        wr_en = 0;
        $display("FIFO Full");
      end
    end
    wr_en = 0;

    #20;

    $display("Reading FIFO");
    for (int i = 0; i < 16; i++) begin
      @ (posedge clk);
      rd_en = 1;
      if (empty) begin
        rd_en = 0;
        $display("FIFO Empty");
      end
    end
    rd_en = 0;

    $finish;
  end

  always #5 clk = ~clk;

endmodule